[{"C:\\Users\\User\\Documents\\ReactJSApps\\react-nextagram\\src\\index.js":"1","C:\\Users\\User\\Documents\\ReactJSApps\\react-nextagram\\src\\App.js":"2","C:\\Users\\User\\Documents\\ReactJSApps\\react-nextagram\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Documents\\ReactJSApps\\react-nextagram\\src\\pages\\Homepage.js":"4","C:\\Users\\User\\Documents\\ReactJSApps\\react-nextagram\\src\\containers\\UserImages.js":"5","C:\\Users\\User\\Documents\\ReactJSApps\\react-nextagram\\src\\pages\\UserProfilePage.js":"6","C:\\Users\\User\\Documents\\ReactJSApps\\react-nextagram\\src\\components\\Navbar.js":"7","C:\\Users\\User\\Documents\\ReactJSApps\\react-nextagram\\src\\components\\Loader.js":"8","C:\\Users\\User\\Documents\\ReactJSApps\\react-nextagram\\src\\components\\AuthModal.js":"9","C:\\Users\\User\\Documents\\ReactJSApps\\react-nextagram\\src\\components\\SignUpForm.js":"10","C:\\Users\\User\\Documents\\ReactJSApps\\react-nextagram\\src\\components\\LogInForm.js":"11","C:\\Users\\User\\Documents\\ReactJSApps\\react-nextagram\\src\\pages\\MyProfilePage.js":"12","C:\\Users\\User\\Documents\\ReactJSApps\\react-nextagram\\src\\pages\\UploadPage.js":"13","C:\\Users\\User\\Documents\\ReactJSApps\\react-nextagram\\src\\containers\\Comments.js":"14","C:\\Users\\User\\Documents\\ReactJSApps\\react-nextagram\\src\\containers\\Likes.js":"15"},{"size":589,"mtime":1607312425787,"results":"16","hashOfConfig":"17"},{"size":2018,"mtime":1608006441759,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":1118,"mtime":1608008828470,"results":"20","hashOfConfig":"17"},{"size":1581,"mtime":1608177117388,"results":"21","hashOfConfig":"17"},{"size":2860,"mtime":1608175908724,"results":"22","hashOfConfig":"17"},{"size":3752,"mtime":1607588157106,"results":"23","hashOfConfig":"17"},{"size":269,"mtime":1607671669068,"results":"24","hashOfConfig":"17"},{"size":718,"mtime":1607701739399,"results":"25","hashOfConfig":"17"},{"size":6621,"mtime":1607703868120,"results":"26","hashOfConfig":"17"},{"size":2786,"mtime":1607674626868,"results":"27","hashOfConfig":"17"},{"size":2344,"mtime":1608008154074,"results":"28","hashOfConfig":"17"},{"size":3047,"mtime":1608092625810,"results":"29","hashOfConfig":"17"},{"size":2291,"mtime":1608171638276,"results":"30","hashOfConfig":"17"},{"size":1741,"mtime":1608177059307,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1qlwr93",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Documents\\ReactJSApps\\react-nextagram\\src\\index.js",[],["66","67"],"C:\\Users\\User\\Documents\\ReactJSApps\\react-nextagram\\src\\App.js",["68"],"import './App.css';\nimport {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport NavBar from \"./components/Navbar\"\nimport { Route } from \"react-router-dom\"\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport HomePage from \"./pages/Homepage\"\nimport UploadPage from \"./pages/UploadPage\"\nimport UserProfilePage from \"./pages/UserProfilePage\"\nimport MyProfilePage from \"./pages/MyProfilePage\"\nimport Loader from \"./components/Loader\"\n\n\n\nfunction App() {\n  const [users, updateUsers] = useState([]) // users useState is an empty array, then updated by using the axios get method and updateUsers method here.\n\n  const [ isLoading, setIsLoading ] = useState(true);\n  const [ loggedIn, setLoggedIn ] = useState(\n    localStorage.getItem('jwt') !== null\n  )\n\n  const toggleLoggedIn = () => {\n    setLoggedIn(true)\n  }\n\n  useEffect(() => {\n    \n    axios.get('https://insta.nextacademy.com/api/v1/users')\n    .then((result) => {\n      console.log(result.data)\n      updateUsers(result.data) // render the data into the users, so first it is an empty array, then updated using the updataUsers method.\n      setIsLoading(!isLoading)\n    })\n    .catch(error => {\n      console.log('ERROR ', error)\n    })\n  }, [])\n\n  if (isLoading) {\n    return (\n      \n    <Loader style={{width:\"50%\", height:\"50%\", position:\"absolute\", top:\"0\", left:\"0\"}}/>\n         \n    )\n  }\n\n\n  return (\n    <div>\n      <NavBar  toggleLoggedIn={toggleLoggedIn} loggedIn={loggedIn} setLoggedIn={setLoggedIn}\n      />\n\n      <Route \n        exact path=\"/\"\n        render={() => <HomePage users={users} />}\n       />\n      \n      <Route \n        path=\"/users/:id\" \n        component={UserProfilePage} \n      />\n\n      <Route \n        exact path=\"/profile\" \n        component={MyProfilePage} \n      />\n\n      <Route \n        exact path=\"/uploadImage\" \n        component={UploadPage} \n      />\n\n      <ToastContainer/>\n    </div>\n  );\n}\n\nexport default App;\n// render={() => <Home user={user} />}","C:\\Users\\User\\Documents\\ReactJSApps\\react-nextagram\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Documents\\ReactJSApps\\react-nextagram\\src\\pages\\Homepage.js",[],"C:\\Users\\User\\Documents\\ReactJSApps\\react-nextagram\\src\\containers\\UserImages.js",["69","70","71","72","73"],"C:\\Users\\User\\Documents\\ReactJSApps\\react-nextagram\\src\\pages\\UserProfilePage.js",["74","75"],"C:\\Users\\User\\Documents\\ReactJSApps\\react-nextagram\\src\\components\\Navbar.js",[],"C:\\Users\\User\\Documents\\ReactJSApps\\react-nextagram\\src\\components\\Loader.js",[],"C:\\Users\\User\\Documents\\ReactJSApps\\react-nextagram\\src\\components\\AuthModal.js",[],"C:\\Users\\User\\Documents\\ReactJSApps\\react-nextagram\\src\\components\\SignUpForm.js",["76","77"],"import React, {useState, useEffect} from \"react\"\r\nimport {ModalHeader, ModalBody, ModalFooter, Button, Form, FormGroup, Label, Input, FormFeedback, FormText} from \"reactstrap\"\r\nimport axios from \"axios\"\r\nimport {toast} from \"react-toastify\"\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst SignUpForm = ({toggleIsLogin, toggle, toggleLoggedIn}) => {\r\n  const [username, setUsername] = useState(\"\")\r\n  const [email, setEmail] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const [delay, setDelay] = useState(null);\r\n  const [usernameValid, setUsernameValid] = useState(true);\r\n  const [passwordValid, setPasswordValid] = useState(true)\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n  const history = useHistory()\r\n\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    axios({\r\n      method: 'POST',\r\n      url: 'https://insta.nextacademy.com/api/v1/users/',\r\n      data: {\r\n        username: username,\r\n        email: email,\r\n        password: password\r\n      }\r\n    })\r\n    .then(response => {\r\n      console.log(response)\r\n      toggle()\r\n      toast.success(response.data.message, {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        });\r\n        toggleLoggedIn()\r\n        localStorage.setItem('jwt', response.data.auth_token)\r\n        history.push(\"/profile\")\r\n    })\r\n    .catch(error => {\r\n\r\n      error.response.data.message.forEach((message) => {\r\n        toast.error(message, {\r\n          position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n      })\r\n\r\n      console.error(error.response) // so that we know what went wrong if the request failed\r\n    })\r\n  }\r\n\r\n  const handleInput = e => {\r\n    // clears queue so that the old keystrokes don't trigger axios call\r\n    clearTimeout(delay);\r\n    const newUsername = e.target.value;\r\n    setUsername(newUsername);\r\n\r\n    const checkUsername = newUsername => {\r\n        // this should only trigger after you stop typing for 500ms\r\n        console.log(\"Making API call to check username!\");\r\n        axios\r\n          .get(\r\n            `https://insta.nextacademy.com/api/v1/users/check_name?username=${newUsername}`\r\n          )\r\n          .then(response => {\r\n            console.log(response.data);\r\n            if (response.data.valid) {\r\n              setUsernameValid(true);\r\n            } else {\r\n              setUsernameValid(false);\r\n            }\r\n          });\r\n      };\r\n\r\n    // put each new keystroke into the queue\r\n    const newDelay = setTimeout(() => {\r\n      checkUsername(newUsername);\r\n    }, 500);\r\n\r\n    setDelay(newDelay);\r\n    \r\n  };\r\n\r\n  const handlePasswordEmail = (e) => {\r\n    if(e.target.name===\"email\"){\r\n      setEmail(e.target.value)\r\n    }\r\n    if(e.target.name ===\"password\"){\r\n      setPassword(e.target.value)\r\n    }\r\n    if(e.target.name === \"confirmPassword\"){\r\n      setConfirmPassword(e.target.value)\r\n    }\r\n  }\r\n\r\n  const getInputProp = () => {\r\n    if (!username.length) {\r\n      return null;\r\n    }\r\n\r\n    if (username.length <= 6) {\r\n      return { invalid: true };\r\n    }\r\n\r\n    if (usernameValid) {\r\n      return { valid: true };\r\n    } else {\r\n      return { invalid: true };\r\n    }\r\n  };\r\n\r\n\r\n  const getFormFeedback = () => {\r\n    if (!username.length) {\r\n      return null;\r\n    }\r\n\r\n    if (username.length <= 6) {\r\n      return <FormFeedback invalid>Must be at least 6 characters</FormFeedback>;\r\n    }\r\n\r\n    if (usernameValid) {\r\n      return <FormFeedback valid>Sweet! That name is available</FormFeedback>;\r\n    } else {\r\n      return <FormFeedback invalid>Sorry! Username is taken</FormFeedback>;\r\n    }\r\n  };\r\n\r\n  const getPwInputProps =() =>{\r\n    if(confirmPassword.length === 0){\r\n      return null\r\n    }\r\n    if(password === confirmPassword){\r\n      return {valid:true}\r\n    }else {\r\n      return {invalid:true}\r\n    }\r\n  }\r\n  const checkPassword = () =>{\r\n    if(!confirmPassword.length){\r\n      return null\r\n    }\r\n    if(password === confirmPassword){\r\n      return <FormText valid>Passwords match!</FormText>\r\n    } else {\r\n      return <FormText invalid>Passwords do not match</FormText>\r\n    }\r\n  }\r\n\r\n  useEffect( () =>{\r\n    if(password === confirmPassword){\r\n      setPasswordValid(true)\r\n    } else {\r\n      setPasswordValid(false)\r\n    }\r\n  },[confirmPassword])\r\n\r\n\r\n  return <>\r\n    <Form>\r\n      <ModalHeader toggle={toggle}>Sign Up</ModalHeader>\r\n      <ModalBody>\r\n          <FormGroup>\r\n              <Label for=\"username\">Username</Label>\r\n              <Input \r\n              type=\"text\" \r\n              name=\"username\" \r\n              id=\"username\" \r\n              placeholder=\"Key in username\" \r\n              value={username} \r\n              onChange={handleInput}\r\n              {...getInputProp()}/>\r\n              {getFormFeedback()}\r\n          </FormGroup>\r\n          <FormGroup>\r\n              <Label for=\"email\">Email</Label>\r\n              <Input \r\n              type=\"email\" \r\n              name=\"email\" \r\n              id=\"email\" \r\n              placeholder=\"Key in email\" \r\n              value={email} \r\n              onChange={handlePasswordEmail} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n              <Label for=\"password\">Password</Label>\r\n              <Input \r\n              type=\"password\" \r\n              name=\"password\" \r\n              id=\"password\" \r\n              placeholder=\"Key in password\" \r\n              value={password} \r\n              onChange={handlePasswordEmail} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"password\">Confirm Password</Label>\r\n            <Input \r\n              type=\"password\" \r\n              name=\"confirmPassword\" \r\n              value={confirmPassword} \r\n              onChange={handlePasswordEmail} \r\n              {...getPwInputProps()}/>\r\n              {checkPassword()}\r\n          </FormGroup>\r\n          <p>Already a member? <a href=\"$\" onClick ={(e) =>{\r\n            e.preventDefault()\r\n            toggleIsLogin()\r\n          }}>Log in here</a></p>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button \r\n          color=\"primary\" \r\n          disabled={!(username && email && password)} \r\n          onClick={handleSubmit} >Sign Up</Button>{' '}\r\n        <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n      </ModalFooter>\r\n    </Form>\r\n  </>\r\n}\r\n\r\nexport default SignUpForm","C:\\Users\\User\\Documents\\ReactJSApps\\react-nextagram\\src\\components\\LogInForm.js",[],"C:\\Users\\User\\Documents\\ReactJSApps\\react-nextagram\\src\\pages\\MyProfilePage.js",["78"],"import React from 'react'\r\nimport {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {CardImg} from 'reactstrap'\r\nimport loadgif from \"../Dual Ball-1s-200px.gif\"\r\n\r\n\r\n\r\nconst MyProfilePage = () => {\r\n\r\n    const [user, setUser] = useState({})\r\n    const [ loggedImages, setLoggedImages ] = useState([])\r\n    const [ isLoading, setIsLoading ] = useState(true);\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        axios.get(\"https://insta.nextacademy.com/api/v1/users/me\",\r\n        {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n        .then(result => {\r\n            console.log(result)\r\n            setUser(result.data)\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        })\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        axios.get(\"https://insta.nextacademy.com/api/v1/images/me\",\r\n        {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n        .then(result => {\r\n            console.log(result)\r\n            setLoggedImages(result.data)\r\n            setIsLoading(!isLoading)\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        })\r\n    },[])\r\n    \r\n\r\n      if (isLoading) {\r\n        return <img src={loadgif} alt=\"loading\"/>\r\n      }\r\n\r\n\r\n    return(\r\n    <div style={{backgroundColor:\"#1b2021\"}}>\r\n        <div style={{textAlign:'center'}}>\r\n            <img style={{width:\"150px\", height:\"150px\", borderRadius:\"50%\", paddingTop:\"10px\"}} src={user.profile_picture} alt=\"profilePicture\"/>\r\n            <h2 style={{color:\"white\"}}>{user.username}</h2>\r\n        </div>\r\n\r\n        <div style={{display:\"flex\", flexWrap:\"wrap\", margin:\"0 1rem\", paddingBottom:\"3rem\", backgroundColor:\"#1b2021\"}}>\r\n              \r\n              {loggedImages.map((eachImg, index) => {\r\n                return (\r\n                  <div style={{position:\"relative\", margin:\"0 auto\", paddingTop:\"10px\", color:\"#fff\", cursor:\"pointer\"}}>                    \r\n                    <CardImg src={eachImg} alt=\"profile images\" style={{width:\"300px\", height:\"300px\", margin:\"24px auto\"}} />\r\n                  </div>\r\n                )\r\n              })}\r\n            \r\n            </div>\r\n    </div>    \r\n    )\r\n\r\n}\r\n\r\nexport default MyProfilePage;","C:\\Users\\User\\Documents\\ReactJSApps\\react-nextagram\\src\\pages\\UploadPage.js",[],"C:\\Users\\User\\Documents\\ReactJSApps\\react-nextagram\\src\\containers\\Comments.js",["79","80"],"C:\\Users\\User\\Documents\\ReactJSApps\\react-nextagram\\src\\containers\\Likes.js",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":40,"column":6,"nodeType":"87","endLine":40,"endColumn":8,"suggestions":"88"},{"ruleId":"89","severity":1,"message":"90","line":5,"column":15,"nodeType":"91","messageId":"92","endLine":5,"endColumn":23},{"ruleId":"89","severity":1,"message":"93","line":6,"column":10,"nodeType":"91","messageId":"92","endLine":6,"endColumn":25},{"ruleId":"89","severity":1,"message":"94","line":7,"column":10,"nodeType":"91","messageId":"92","endLine":7,"endColumn":19},{"ruleId":"89","severity":1,"message":"95","line":7,"column":21,"nodeType":"91","messageId":"92","endLine":7,"endColumn":28},{"ruleId":"85","severity":1,"message":"96","line":28,"column":8,"nodeType":"87","endLine":28,"endColumn":10,"suggestions":"97"},{"ruleId":"85","severity":1,"message":"98","line":33,"column":10,"nodeType":"87","endLine":33,"endColumn":12,"suggestions":"99"},{"ruleId":"85","severity":1,"message":"98","line":45,"column":10,"nodeType":"87","endLine":45,"endColumn":12,"suggestions":"100"},{"ruleId":"89","severity":1,"message":"101","line":14,"column":10,"nodeType":"91","messageId":"92","endLine":14,"endColumn":23},{"ruleId":"85","severity":1,"message":"102","line":169,"column":5,"nodeType":"87","endLine":169,"endColumn":22,"suggestions":"103"},{"ruleId":"85","severity":1,"message":"86","line":48,"column":7,"nodeType":"87","endLine":48,"endColumn":9,"suggestions":"104"},{"ruleId":"89","severity":1,"message":"105","line":4,"column":25,"nodeType":"91","messageId":"92","endLine":4,"endColumn":37},{"ruleId":"89","severity":1,"message":"106","line":5,"column":8,"nodeType":"91","messageId":"92","endLine":5,"endColumn":14},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isLoading'. Either include it or remove the dependency array. You can also do a functional update 'setIsLoading(i => ...)' if you only need 'isLoading' in the 'setIsLoading' call.","ArrayExpression",["109"],"no-unused-vars","'CardBody' is defined but never used.","Identifier","unusedVar","'FontAwesomeIcon' is defined but never used.","'faComment' is defined but never used.","'faHeart' is defined but never used.","React Hook useEffect has missing dependencies: 'isLoading' and 'userId'. Either include them or remove the dependency array. You can also do a functional update 'setIsLoading(i => ...)' if you only need 'isLoading' in the 'setIsLoading' call.",["110"],"React Hook useEffect has missing dependencies: 'id' and 'isLoading'. Either include them or remove the dependency array. You can also do a functional update 'setIsLoading(i => ...)' if you only need 'isLoading' in the 'setIsLoading' call.",["111"],["112"],"'passwordValid' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'password'. Either include it or remove the dependency array.",["113"],["114"],"'CardSubtitle' is defined but never used.","'Moment' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},{"desc":"119","fix":"121"},{"desc":"122","fix":"123"},{"desc":"115","fix":"124"},"Update the dependencies array to be: [isLoading]",{"range":"125","text":"126"},"Update the dependencies array to be: [isLoading, userId]",{"range":"127","text":"128"},"Update the dependencies array to be: [id, isLoading]",{"range":"129","text":"130"},{"range":"131","text":"130"},"Update the dependencies array to be: [confirmPassword, password]",{"range":"132","text":"133"},{"range":"134","text":"126"},[1264,1266],"[isLoading]",[857,859],"[isLoading, userId]",[1044,1046],"[id, isLoading]",[1384,1386],[4565,4582],"[confirmPassword, password]",[1264,1266]]